# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: calculator.proto

require 'google/protobuf'


descriptor_data = "\n\x10\x63\x61lculator.proto\x12\ncalculator\"#\n\x0b\x43\x61lcRequest\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\"\x18\n\tCalcReply\x12\x0b\n\x03res\x18\x01 \x01(\x01\x32\xe8\x01\n\nCalculator\x12\x35\n\x03Sum\x12\x17.calculator.CalcRequest\x1a\x15.calculator.CalcReply\x12\x35\n\x03Sub\x12\x17.calculator.CalcRequest\x1a\x15.calculator.CalcReply\x12\x35\n\x03Mul\x12\x17.calculator.CalcRequest\x1a\x15.calculator.CalcReply\x12\x35\n\x03\x44iv\x12\x17.calculator.CalcRequest\x1a\x15.calculator.CalcReplyb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Calculator
  CalcRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("calculator.CalcRequest").msgclass
  CalcReply = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("calculator.CalcReply").msgclass
end
